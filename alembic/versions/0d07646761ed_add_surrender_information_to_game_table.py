"""Add surrender information to game table

Revision ID: 0d07646761ed
Revises: 9588c44b79c5
Create Date: 2025-05-03 17:29:49.136001

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm import Session

# revision identifiers, used by Alembic.
revision: str = '0d07646761ed'
down_revision: Union[str, None] = '9588c44b79c5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    import sys
    import os
    sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
    from ATG.models import Game, Participant
    
    op.add_column('games', sa.Column('game_ended_in_early_surrender', sa.Boolean(), nullable=True))
    op.add_column('games', sa.Column('game_ended_in_surrender', sa.Boolean(), nullable=True))
    
    connection = op.get_bind()
    session = Session(bind=connection)
    
    try:
        subquery = (
            sa.select(
                Participant.game_id,
                sa.func.bool_or(Participant.game_ended_in_early_surrender).label('early_surrender'),
                sa.func.bool_or(Participant.game_ended_in_surrender).label('surrender')
            )
            .group_by(Participant.game_id)
            .subquery()
        )
        
        update_stmt = (
            sa.update(Game)
            .values({
                Game.game_ended_in_early_surrender: 
                    sa.func.coalesce(subquery.c.early_surrender, False),
                Game.game_ended_in_surrender: 
                    sa.func.coalesce(subquery.c.surrender, False)
            })
            .where(Game.id == subquery.c.game_id)
        )
        
        session.execute(update_stmt)
        
        null_update = (
            sa.update(Game)
            .values({
                Game.game_ended_in_early_surrender: False,
                Game.game_ended_in_surrender: False
            })
            .where(
                (Game.game_ended_in_early_surrender.is_(None)) |
                (Game.game_ended_in_surrender.is_(None))
            )
        )
        
        session.execute(null_update)
        session.commit()
        
    except Exception as e:
        session.rollback()
        raise e
    finally:
        session.close()



def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('games', 'game_ended_in_surrender')
    op.drop_column('games', 'game_ended_in_early_surrender')
    # ### end Alembic commands ###
